{"meta":{"title":"城北徐公子","subtitle":"再努力一点","description":"人生就是这样，奋斗奋斗才是未来","author":"徐北城","url":"https://Xu-Shuhao.github.io","root":"/"},"pages":[{"title":"categories","date":"2021-08-06T07:58:07.000Z","updated":"2021-08-06T08:01:52.258Z","comments":true,"path":"categories/index.html","permalink":"https://xu-shuhao.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-08-06T07:58:23.000Z","updated":"2021-08-06T08:02:31.021Z","comments":true,"path":"tags/index.html","permalink":"https://xu-shuhao.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"新手PytorchTensor笔记 (一)","slug":"新手PytorchTensor笔记","date":"2021-08-06T08:04:20.000Z","updated":"2021-08-06T14:50:52.809Z","comments":true,"path":"2021/08/06/新手PytorchTensor笔记/","link":"","permalink":"https://xu-shuhao.github.io/2021/08/06/%E6%96%B0%E6%89%8BPytorchTensor%E7%AC%94%E8%AE%B0/","excerpt":"","text":"本篇博客介绍Pytorch中的Tensor概念, 如果你会用Numpy的话, 学习轻而易举 来源官方文档: https://pytorch.org/tutorials/beginner/blitz/tensor_tutorial.html#bridge-to-np-label 12import torchimport numpy as np Tensor Initialization 张量初始化总结: 从普通的数据转变, 直接torch.tensor() 从Numpy导入, torch.from_numpy() 抄其他数据格式, torch.ones/rand_like() ① 从数据中生成Tensor张量 12data = [1, 2, 3, 4]t_data = torch.tensor(data) ② 从Numpy中导入 12np_array = np.array(data)t_np_array = torch.from_numpy(np_array) ③ 从其他Tensor导入 12t_ones = torch.ones_like(t_np_array)t_rand = torch.rand_like(t_ones) One Tensor: ​ tensor([1, 1, 1, 1]) ​ tensor([0.2233, 0.5553, 0.3333, 0.5542]) ④ 随机生成*(需指定样式shape)* 1234shape = (2, 3, )rand_tensor = torch.rand(shape)ones_tensor = torch.ones(shape)zeros_tensor = torch.zeros(shape) 1234567# 额外讲讲 shape 的事情x = torch.rand((2, 3, )) # x的shape值是(2, 3, ), 表示这是一个二维数组, 有两行, 三列y = torch.rand((2, ))# y的shape是(2, ), 表示的是一个一维数组, 这个一维数组里, 有两个元素z = torch.rand((2, 1 ))# z的shape是(2, 1), 表示的是一个二维数组, 总共两行, 一列(每一行一个元素) Tensor Attributes 张量属性 tensor.shape tensor.dtype tensor.devices result is cpu or gpu Tensor Operation123# We move our tensor to the GPU if availableif torch.cuda.is_available(): tensor = tensor.to(&#x27;cuda&#x27;) torch的用法和Numpy很相近 12tensor = torch.ones(4, 4)tensor[:,1] = 0 tensor([ [1., 0., 1., 1.], [1., 0., 1., 1.], [1., 0., 1., 1.], [1., 0., 1., 1.]]) 12t1 = torch.cat([tensor, tensor, tensor], dim=1)# 这里cat 将多个tensor按照 *列* 进行组合, 前提是除了 *列* 之外, 其他维度都要一样 tensor([ [1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.], [1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.], [1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.], [1., 0., 1., 1., 1., 0., 1., 1., 1., 0., 1., 1.]]) 用_下缀会是全体的结果 1tensor.add_(5) #是tensor中每一个单元都+5","categories":[{"name":"Pytorch","slug":"Pytorch","permalink":"https://xu-shuhao.github.io/categories/Pytorch/"}],"tags":[{"name":"Pytorch","slug":"Pytorch","permalink":"https://xu-shuhao.github.io/tags/Pytorch/"},{"name":"Learning Note","slug":"Learning-Note","permalink":"https://xu-shuhao.github.io/tags/Learning-Note/"},{"name":"Muggle","slug":"Muggle","permalink":"https://xu-shuhao.github.io/tags/Muggle/"}]},{"title":"Hexo+Github+Butterfly mac上部署自己的博客","slug":"Hexo-Github-Butterfly-mac上部署自己的博客","date":"2021-08-06T03:17:57.000Z","updated":"2021-08-06T05:50:46.542Z","comments":true,"path":"2021/08/06/Hexo-Github-Butterfly-mac上部署自己的博客/","link":"","permalink":"https://xu-shuhao.github.io/2021/08/06/Hexo-Github-Butterfly-mac%E4%B8%8A%E9%83%A8%E7%BD%B2%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"Hexo+Github+Butterfly mac上部署自己的博客Abstract：摘要 本篇博客在继承诸多博主的经验以及总结官方教程之后，详细讲述如何在MacOS环境下利用Hexo框架下的Butterfly主题，在同性交友网站Github上部署自己的博客。 Introduction：在Github上利用Hexo部署自己的博客已经是个常态，（默认看本教程的用户有Github账号），本文会讲述以下内容： 如何在本地电脑上配置Github公钥和私钥 如何创建Github静态托管页面 如何部署Hexo在本地 如何应用Butterfly主题 如何写博客并且发布到Github上 如何在本地电脑上配置Github公钥和私钥现在打开电脑的terminal终端 1、安装Git​ 如果不确定是否安装过Git，请用 1git --version ​ 如果出现`git version 2.31.1Git版本字样，说明安装成功Git了，如果没有安装过，请用 1brew install git ​ 这是用HomeBrew安装Git包，本博客推荐（Homebrew是MacOS的一款包管理器，类似于python中的pip），如果没有安装HomeBrew，请用 1/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot; 2、生成SSH密钥文件​ 这是为了以后你每次将博客推送到Github，不需要重复输入用户名和密码。 a. 检查是否已经有SSH Key了12cd ~/.sshls ​ 如果文件存在，那就不需要配置SSH密钥，直接跳过这一步骤，如果没有，则在命令行输入： 12git config --global user.name &quot;你的Github用户名&quot;git config --global user.email &quot;你的Github注册邮箱&quot; ​ 随后生成SSH密钥文件 1ssh-keygen -t rsa -C &quot;你的Github注册邮箱&quot; ​ 系统会问你三次密码：比如推送Git时要需要的代码等，个人建议直接三次回车，省得麻烦。 ​ 随后系统会告诉你已经成功生成了id_rsa&amp;id_rsa.pub文件，输入 1cat ~/.ssh/id_rsa.pub ​ 将id_rsa.pub在terminal显示，复制该内容SHA256:xxx到剪切板，随后打开Github，在Setting-&gt;SSH and GPG keys点击New SSH key将剪切板的内容复制到Key上去，Title部分取名容易知道这是哪台电脑的SSH即可. 比如 SimonDeMac 3 验证是否成功输入 1ssh -T git@github.com ​ 进行验证,如果出现Hi 你的Github用户名! You&#39;ve successfully authenticated, but GitHub does not provide shell access.说明验成功了. 如何创建Github静态托管页面​ 新建一个Repositoriy, 名字是你的用户名.github.io, 仓库要选择Public. 至于协议之类的, 都随意. 如何部署Hexo在电脑本地1 查验是否安装Node.js​ Hexo是基于Node.js框架的, 输入node --v如果出现版本号, 就是已经安装过了, 如果没有, 请 1brew install node 2 用npm 安装Hexo​ npm是node,js的包管理工具, 输入npm -v查看是否安装成功, 随后用npm安装Hexo 1npm install -g hexo-cli 3 初始化博客目录​ 比如说你想在/Users/用户名/Documents/GithubBlog这个目录下建立博客, 先将命令行切过去 1cd /Users/你的用户名/Documents ​ 然后 1mkdir GithubBlog ​ 创建目录, 再cd GithubBlog进入,这时候你的目录是/Users/用户名/Documents/GithubBlog ​ 下一步, 初始化博客 1hexo init 4 如何应用Butterfly主题a 在刚才文件夹目录下, 输入1git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly ​ 启用Butterfly, vim 根目录的_config,yml文件, 将theme: landscape 改成 theme: Butterfly ​ 为了主题的平滑升级, 把主题默认配置文件themes/Butterfly/_config.yml复制到 Hexo 工作目录下的themes/source/_data/butterfly.yml，如果source/_data的目录不存在那就创建一个。 ​ 如果创建了butterfly.yml, 它将会替换主题默认配置文件themes/Butterfly/_config.yml里的配置项 (不是合并而是替换), 之后就只需要通过git pull的方式平滑地升级 theme-butterfly了。 b 解决Bug出现时 extends includes/layout.pug block content #recent-posts.recent-posts include includes/recent-posts.pug include includes/pagination.pug #aside_content.aside_content include includes/aside.pug 请使用 1npm install hexo-renderer-pug hexo-renderer-stylus --save c 进行_config.yml配置​ 在_config.yml中更新deploy内容: 123456# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy: type: git repo: https://github.com/Github用户名/Github用户名.github.io.git branch: master ​ 因为你选择的是master分支, 所以去Github, 你的用户名.github.io这个仓库中, 打开Setting-&gt; Pages-&gt;Source Branch: 从main改成master 5 如何写博客并且发布到Github上​ 你的博客都在sourc/_post中, hexo -n blogName.md, 用Typora开始写作吧, 写完之后, 在命令行输入 123hexo cleanhexo ghexo d ​ 即可. 关于美化部分, 打算参考这篇文章 [美化Butterfly][https://innerspace-hs.github.io/2020/11/07/butterfly%E7%BE%8E%E5%8C%96hexo%E5%8D%9A%E5%AE%A2/] [][]","categories":[{"name":"Blog","slug":"Blog","permalink":"https://xu-shuhao.github.io/categories/Blog/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://xu-shuhao.github.io/tags/Hexo/"},{"name":"Butterfly","slug":"Butterfly","permalink":"https://xu-shuhao.github.io/tags/Butterfly/"}]}],"categories":[{"name":"Pytorch","slug":"Pytorch","permalink":"https://xu-shuhao.github.io/categories/Pytorch/"},{"name":"Blog","slug":"Blog","permalink":"https://xu-shuhao.github.io/categories/Blog/"}],"tags":[{"name":"Pytorch","slug":"Pytorch","permalink":"https://xu-shuhao.github.io/tags/Pytorch/"},{"name":"Learning Note","slug":"Learning-Note","permalink":"https://xu-shuhao.github.io/tags/Learning-Note/"},{"name":"Muggle","slug":"Muggle","permalink":"https://xu-shuhao.github.io/tags/Muggle/"},{"name":"Hexo","slug":"Hexo","permalink":"https://xu-shuhao.github.io/tags/Hexo/"},{"name":"Butterfly","slug":"Butterfly","permalink":"https://xu-shuhao.github.io/tags/Butterfly/"}]}